<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhou.crm.workbench.mapper.TransactionMapper" >
  <resultMap id="BaseResultMap" type="com.zhou.crm.workbench.domain.Transaction" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="owner" property="owner" jdbcType="CHAR" />
    <result column="money" property="money" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="expected_date" property="expectedDate" jdbcType="CHAR" />
    <result column="customer_id" property="customerId" jdbcType="CHAR" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="stage" property="stage" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="activity_id" property="activityId" jdbcType="CHAR" />
    <result column="activity_name" property="activityName" jdbcType="VARCHAR" />
    <result column="contacts_id" property="contactsId" jdbcType="CHAR" />
    <result column="contacts_name" property="contactsName" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="edit_by" property="editBy" jdbcType="VARCHAR" />
    <result column="edit_time" property="editTime" jdbcType="CHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="contact_summary" property="contactSummary" jdbcType="VARCHAR" />
    <result column="next_contact_time" property="nextContactTime" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, owner, money, name, expected_date, customer_id, stage, type, source, activity_id, 
    contacts_id, create_by, create_time, edit_by, edit_time, description, contact_summary, 
    next_contact_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tbl_tran
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tbl_tran
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.zhou.crm.workbench.domain.Transaction" >
    insert into tbl_tran (id, owner, money, name, 
      expected_date, customer_id, stage, 
      type, source, activity_id, 
      contacts_id, create_by, create_time, 
      edit_by, edit_time, description, 
      contact_summary, next_contact_time)
    values (#{id,jdbcType=CHAR}, #{owner,jdbcType=CHAR}, #{money,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{expectedDate,jdbcType=CHAR}, #{customerId,jdbcType=CHAR}, #{stage,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, #{activityId,jdbcType=CHAR}, 
      #{contactsId,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=CHAR}, 
      #{editBy,jdbcType=VARCHAR}, #{editTime,jdbcType=CHAR}, #{description,jdbcType=VARCHAR}, 
      #{contactSummary,jdbcType=VARCHAR}, #{nextContactTime,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhou.crm.workbench.domain.Transaction" >
    insert into tbl_tran
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="owner != null" >
        owner,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="expectedDate != null" >
        expected_date,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="stage != null" >
        stage,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="contactsId != null" >
        contacts_id,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="editBy != null" >
        edit_by,
      </if>
      <if test="editTime != null" >
        edit_time,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="contactSummary != null" >
        contact_summary,
      </if>
      <if test="nextContactTime != null" >
        next_contact_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="owner != null" >
        #{owner,jdbcType=CHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="expectedDate != null" >
        #{expectedDate,jdbcType=CHAR},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=CHAR},
      </if>
      <if test="stage != null" >
        #{stage,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null" >
        #{activityId,jdbcType=CHAR},
      </if>
      <if test="contactsId != null" >
        #{contactsId,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null" >
        #{editBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null" >
        #{editTime,jdbcType=CHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="contactSummary != null" >
        #{contactSummary,jdbcType=VARCHAR},
      </if>
      <if test="nextContactTime != null" >
        #{nextContactTime,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhou.crm.workbench.domain.Transaction" >
    update tbl_tran
    <set >
      <if test="owner != null" >
        owner = #{owner,jdbcType=CHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="expectedDate != null" >
        expected_date = #{expectedDate,jdbcType=CHAR},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=CHAR},
      </if>
      <if test="stage != null" >
        stage = #{stage,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null" >
        activity_id = #{activityId,jdbcType=CHAR},
      </if>
      <if test="contactsId != null" >
        contacts_id = #{contactsId,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null" >
        edit_by = #{editBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null" >
        edit_time = #{editTime,jdbcType=CHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="contactSummary != null" >
        contact_summary = #{contactSummary,jdbcType=VARCHAR},
      </if>
      <if test="nextContactTime != null" >
        next_contact_time = #{nextContactTime,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhou.crm.workbench.domain.Transaction" >
    update tbl_tran
    set owner = #{owner,jdbcType=CHAR},
      money = #{money,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      expected_date = #{expectedDate,jdbcType=CHAR},
      customer_id = #{customerId,jdbcType=CHAR},
      stage = #{stage,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      activity_id = #{activityId,jdbcType=CHAR},
      contacts_id = #{contactsId,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=CHAR},
      edit_by = #{editBy,jdbcType=VARCHAR},
      edit_time = #{editTime,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      contact_summary = #{contactSummary,jdbcType=VARCHAR},
      next_contact_time = #{nextContactTime,jdbcType=CHAR}
    where id = #{id,jdbcType=CHAR}
  </update>

  <select id="selectTransactionForDetailByCustomerId" parameterType="string" resultMap="BaseResultMap">
    select t.id,u.name as owner,t.money,t.name,t.expected_date,t.customer_id,dv.value as stage,dv2.value as type,dv3.value as source,t.activity_id,t.contacts_id,
           u2.name as create_by,t.create_time,u3.name as edit_by,t.edit_time,t.description,t.contact_summary,t.next_contact_time
    from tbl_tran t
    join tbl_user u
    on t.owner = u.id
    left join tbl_dic_value dv
    on t.stage = dv.id
    left join tbl_dic_value dv2
    on t.type = dv2.id
    left join tbl_dic_value dv3
    on t.source = dv3.id
    join tbl_user u2
    on t.create_by = u2.id
    left join tbl_user u3
    on t.edit_by = u3.id
    where t.customer_id = #{customerId}
  </select>

  <insert id="insertTransaction" parameterType="com.zhou.crm.workbench.domain.Transaction">
    insert into tbl_tran(id, owner, money, name,
                         expected_date, customer_id, stage,
                         type, source, activity_id,
                         contacts_id, create_by, create_time,
                         edit_by, edit_time, description,
                         contact_summary, next_contact_time)
    values(#{id}, #{owner}, #{money}, #{name}, #{expectedDate}, #{customerId}, #{stage},#{type}, #{source}, #{activityId}, #{contactsId},
           #{createBy}, #{createTime}, #{editBy}, #{editTime}, #{description}, #{contactSummary}, #{nextContactTime})
  </insert>

  <delete id="deleteTransactionById" parameterType="string">
    delete from tbl_tran
    where id = #{id}
  </delete>

  <delete id="deleteTransactionByCustomerIds" parameterType="string">
    delete from tbl_tran
    where customer_id in
    <foreach collection="array" item="customerId" separator="," open="(" close=")">
      #{customerId}
    </foreach>
  </delete>

  <select id="selectTransactionForDetailByContactsId" parameterType="string" resultMap="BaseResultMap">
    select t.id,u.name as owner,t.money,t.name,t.expected_date,t.customer_id,dv.value as stage,dv2.value as type,dv3.value as source,t.activity_id,t.contacts_id,
           u2.name as create_by,t.create_time,u3.name as edit_by,t.edit_time,t.description,t.contact_summary,t.next_contact_time
    from tbl_tran t
    join tbl_user u
    on t.owner = u.id
    left join tbl_dic_value dv
    on t.stage = dv.id
    left join tbl_dic_value dv2
    on t.type = dv2.id
    left join tbl_dic_value dv3
    on t.source = dv3.id
    join tbl_user u2
    on t.create_by = u2.id
    left join tbl_user u3
    on t.edit_by = u3.id
    where t.contacts_id = #{contactsId}
  </select>

  <delete id="deleteTransactionByContactsIds" parameterType="string">
    delete from tbl_tran
    where contacts_id in
    <foreach collection="array" item="contactsId" separator="," open="(" close=")">
      #{contactsId}
    </foreach>
  </delete>

  <select id="selectTransactionByConditionForPage" parameterType="map" resultMap="BaseResultMap">
    select t.id, u.name as owner, t.money, t.name, t.expected_date, c.name as customer_id, dv.value as stage, dv2.value as type, dv3.value as source,
           a.name as activity_id, co.fullname as contacts_id, u2.name as create_by, t.create_time, u3.name as edit_by, t.edit_time, t.description,
           t.contact_summary, t.next_contact_time
    from tbl_tran t
    join tbl_user u
    on t.owner = u.id
    join tbl_customer c
    on t.customer_id = c.id
    join tbl_dic_value dv
    on t.stage = dv.id
    left join tbl_dic_value dv2
    on t.type = dv2.id
    left join tbl_dic_value dv3
    on t.source = dv3.id
    left join tbl_activity a
    on t.activity_id = a.id
    left join tbl_contacts co
    on t.contacts_id = co.id
    join tbl_user u2
    on t.create_by = u2.id
    left join tbl_user u3
    on t.edit_by = u3.id
    <where>
      <if test="owner != null and owner != ''">
        and u.name like '%' #{owner} '%'
      </if>
      <if test="name != null and name != ''">
        and t.name like '%' #{name} '%'
      </if>
      <if test="customerName != null and customerName != ''">
        and c.name like '%' #{customerName} '%'
      </if>
      <if test="stage != null and stage != ''">
        and dv.id = #{stage}
      </if>
      <if test="type != null and type != ''">
        and dv2.id = #{type}
      </if>
      <if test="source != null and source != ''">
        and dv3.id = #{source}
      </if>
      <if test="contactsName != null and contactsName != ''">
        and co.fullname like '%' #{contactsName} '%'
      </if>
    </where>
    order by t.create_time desc
    limit #{beginNo},#{pageSize}
  </select>

  <select id="selectCountOfTransactionByConditionForPage" parameterType="map" resultType="int">
    select count(*)
    from tbl_tran t
    join tbl_user u
    on t.owner = u.id
    join tbl_customer c
    on t.customer_id = c.id
    join tbl_dic_value dv
    on t.stage = dv.id
    left join tbl_dic_value dv2
    on t.type = dv2.id
    left join tbl_dic_value dv3
    on t.source = dv3.id
    left join tbl_activity a
    on t.activity_id = a.id
    left join tbl_contacts co
    on t.contacts_id = co.id
    join tbl_user u2
    on t.create_by = u2.id
    left join tbl_user u3
    on t.edit_by = u3.id
    <where>
      <if test="owner != null and owner != ''">
        and u.name like '%' #{owner} '%'
      </if>
      <if test="name != null and name != ''">
        and t.name like '%' #{name} '%'
      </if>
      <if test="customerName != null and customerName != ''">
        and c.name like '%' #{customerName} '%'
      </if>
      <if test="stage != null and stage != ''">
        and dv.value = #{stage}
      </if>
      <if test="type != null and type != ''">
        and dv2.value = #{type}
      </if>
      <if test="source != null and source != ''">
        and dv3.value = #{source}
      </if>
      <if test="contactsName != null and contactsName != ''">
        and co.fullname like '%' #{contactsName} '%'
      </if>
    </where>
  </select>

  <select id="selectTransactionForEditById" parameterType="string" resultMap="BaseResultMap">
    select t.id, t.owner, t.money, t.name, t.expected_date, c.name as customer_id, t.stage, t.type, t.source,
           t.activity_id, a.name as activity_name, t.contacts_id, co.fullname as contacts_name, u2.name as create_by, t.create_time, u3.name as edit_by,
           t.edit_time, t.description, t.contact_summary, t.next_contact_time
    from tbl_tran t
    join tbl_user u
    on t.owner = u.id
    join tbl_customer c
    on t.customer_id = c.id
    left join tbl_activity a
    on t.activity_id = a.id
    left join tbl_contacts co
    on t.contacts_id = co.id
    join tbl_user u2
    on t.create_by = u2.id
    left join tbl_user u3
    on t.edit_by = u3.id
    where t.id = #{id}
  </select>

  <update id="updateTransaction" parameterType="com.zhou.crm.workbench.domain.Transaction">
    update tbl_tran
    set owner = #{owner}, money = #{money}, name = #{name}, expected_date = #{expectedDate}, customer_id = #{customerId}, stage = #{stage},
        type = #{type}, source = #{source}, activity_id = #{activityId}, contacts_id = #{contactsId}, edit_by = #{editBy}, edit_time = #{editTime},
        description = #{description}, contact_summary = #{contactSummary},
        next_contact_time = #{nextContactTime}
    where id = #{id}
  </update>

  <delete id="deleteTransactionByIds" parameterType="string">
    delete from tbl_tran
    where id in
    <foreach collection="array" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </delete>

  <select id="selectTransactionForDetailById" parameterType="string" resultMap="BaseResultMap">
    select t.id, u.name as owner, t.money, t.name, t.expected_date, c.name as customer_id, dv.order_no,dv.value as stage, dv2.value as type, dv3.value as source,
           a.name as activity_id, co.fullname as contacts_id, u2.name as create_by, t.create_time, u3.name as edit_by, t.edit_time, t.description,
           t.contact_summary, t.next_contact_time
    from tbl_tran t
    join tbl_user u
    on t.owner = u.id
    join tbl_customer c
    on t.customer_id = c.id
    join tbl_dic_value dv
    on t.stage = dv.id
    left join tbl_dic_value dv2
    on t.type = dv2.id
    left join tbl_dic_value dv3
    on t.source = dv3.id
    left join tbl_activity a
    on t.activity_id = a.id
    left join tbl_contacts co
    on t.contacts_id = co.id
    join tbl_user u2
    on t.create_by = u2.id
    left join tbl_user u3
    on t.edit_by = u3.id
    where t.id = #{id}
  </select>

  <update id="updateTransactionForDetailByMap" parameterType="map">
    update tbl_tran
    set stage = #{stage}, edit_by = #{editBy}, edit_time = #{editTime}
    where id = #{id}
  </update>

  <select id="selectCountOfTransactionGroupByStage" resultType="com.zhou.crm.workbench.domain.FunnelVO">
    select count(*) as value,dv.value as name
    from tbl_tran t
    join tbl_dic_value dv
    on t.stage = dv.id
    group by t.stage
  </select>
</mapper>